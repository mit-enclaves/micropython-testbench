# Assumes: $(PYTHON)
# Assumes: $(BUILD_DIR)
# Assumes: $(INFRA_DIR)
# Assumes: $(PLATFORM_DIR)
# Assumes: $(QUEUE_SRC_DIR)
# Assumes: $(CC)
# Assumes: $(OBJCOPY)

ENCLAVE_BIN := /mnt/efs/fs1/micropython/ports/bare-riscv/build/firmware.bin

# Flags
INFRA_CFLAGS := $(CFLAGS)
INFRA_LDFLAGS := $(LDFLAGS)

# Linker Script
INFRA_LD :=  $(BUILD_DIR)/infra.lds
# Preprocessor fills out linker script constants
$(BUILD_DIR)/infra.lds : $(INFRA_DIR)/infra.lds.in $(BUILD_DIR)
	$(CC) -E -x c $(addprefix -I , $(PLATFORM_DIR)) $< | grep -v '^#' > $@

## Null Test Bootloader

# Targets
NULL_BOOT_BINARY := $(BUILD_DIR)/null_boot.bin
NULL_BOOT_ELF := $(BUILD_DIR)/null_boot.elf

# Sources
BOOT_SRC := \
	$(INFRA_DIR)/null_boot_loader/boot.S

# Rules
$(NULL_BOOT_ELF): $(BOOT_SRC) $(INFRA_LD) $(BUILD_DIR)
	$(CC) $(CFLAGS) $(addprefix -I , $(INFRA_INCLUDES)) $(INFRA_LDFLAGS) -T $(INFRA_LD) $(BOOT_SRC) -o $@

$(NULL_BOOT_BINARY): $(NULL_BOOT_ELF)
	$(OBJCOPY) -O binary --only-section=.boot  $< $@

.PHONY: null_bootloader
null_bootloader: $(NULL_BOOT_BINARY)

ALL+=null_bootloader

## Other Important Targets

# Binaries
SM_BINARY := $(SM_BUILD_DIR)/sm.bin
IDPT_BIN := $(BUILD_DIR)/idpt.bin

$(IDPT_BIN): $(INFRA_DIR)/scripts/idpt.py
	$(PYTHON) $(INFRA_DIR)/scripts/idpt.py $(PLATFORM_DIR)/parameters.h $@

ALL+=$(IDPT_BIN)

## master_test

# Target
PAYLOAD_ELF:=$(BUILD_DIR)/payload.elf

# Headers
INFRA_INCLUDES := \
	$(PLATFORM_DIR) \
	$(API_DIR) \
	$(INFRA_DIR) \
	$(SM_SRC_DIR) \

# Sources
PAYLOAD_SRC := \
	$(INFRA_DIR)/enclave_bin.S \
	$(INFRA_DIR)/untrusted_entry.S \
	$(INFRA_DIR)/untrusted_main.c \
	$(INFRA_DIR)/untrusted_util.c \
	$(INFRA_DIR)/clib/memset.c \
	$(INFRA_DIR)/clib/memcpy.c \
	$(PLATFORM_DIR)/idpt.S \
	$(PLATFORM_DIR)/htif_for_linking.c \
	$(PLATFORM_DIR)/sm_keys.c \
	$(PLATFORM_DIR)/sm_binary.S \
	$(INFRA_DIR)/sbi/console.c \

# Rules
$(PAYLOAD_ELF): $(PAYLOAD_SRC) $(INFRA_LD) $(BUILD_DIR) $(SM_BINARY) $(ENCLAVE_BIN) $(IDPT_BIN)
	$(CC) $(CFLAGS) $(addprefix -I , $(INFRA_INCLUDES)) $(INFRA_LDFLAGS) -T $(INFRA_LD) $(PAYLOAD_SRC) -D IDPT_FILE=\"$(IDPT_BIN)\" -D ENCLAVE_BINARY_FILE=\"$(ENCLAVE_BIN)\" -D SM_BINARY_FILE=\"$(SM_BINARY)\" -o $@

.PHONY: untrusted_infra
untrusted_infra: $(PAYLOAD_ELF)

.PHONY: run_all
run_all: check_env $(NULL_BOOT_BINARY) $(PAYLOAD_ELF)
	$(SANCTUM_QEMU) $(QEMU_FLAGS) --kernel $(PAYLOAD_ELF) --bios $(NULL_BOOT_BINARY)

.PHONY: debug_all
debug_all: check_env $(NULL_BOOT_BINARY) $(PAYLOAD_ELF) 
	$(SANCTUM_QEMU) $(QEMU_FLAGS) $(DEBUG_QEMU_FLAGS) --kernel $(PAYLOAD_ELF) --bios $(NULL_BOOT_BINARY)
